package ass3;

import java.util.*;

public class UnionFind {
    private Map<String, String> parent;
    private Map<String, Integer> rank;

    public UnionFind(Set<String> vertices) {
        parent = new HashMap<>();
        rank = new HashMap<>();

        for (String vertex : vertices) {
            parent.put(vertex, vertex);
            rank.put(vertex, 0);
        }
    }

    public String find(String vertex) {
        if (!parent.get(vertex).equals(vertex)) {
            parent.put(vertex, find(parent.get(vertex)));
        }
        return parent.get(vertex);
    }

    public boolean union(String vertex1, String vertex2) {
        String root1 = find(vertex1);
        String root2 = find(vertex2);

        if (root1.equals(root2)) {
            return false;
        }


        if (rank.get(root1) < rank.get(root2)) {
            parent.put(root1, root2);
        } else if (rank.get(root1) > rank.get(root2)) {
            parent.put(root2, root1);
        } else {
            parent.put(root2, root1);
            rank.put(root1, rank.get(root1) + 1);
        }

        return true;
    }
}
