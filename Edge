package ass3;

import java.util.Objects;

public class Edge implements Comparable<Edge> {
    private String from;
    private String to;
    private int weight;

    public Edge(String from, String to, int weight) {
        this.from = from;
        this.to = to;
        this.weight = weight;
    }

    
    public String getFrom() { return from; }
    public String getTo() { return to; }
    public int getWeight() { return weight; }


    public String getOther(String vertex) {
        if (vertex.equals(from)) return to;
        if (vertex.equals(to)) return from;
        throw new IllegalArgumentException("Vertex not in edge");
    }

    @Override
    public int compareTo(Edge other) {
        return Integer.compare(this.weight, other.weight);
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (obj == null || getClass() != obj.getClass()) return false;
        Edge edge = (Edge) obj;
        return weight == edge.weight &&
                ((Objects.equals(from, edge.from) && Objects.equals(to, edge.to)) ||
                        (Objects.equals(from, edge.to) && Objects.equals(to, edge.from)));
    }

    @Override
    public int hashCode() {
        return Objects.hash(from, to, weight) + Objects.hash(to, from, weight);
    }

    @Override
    public String toString() {
        return "Edge{from='" + from + "', to='" + to + "', weight=" + weight + "}";
    }
}
